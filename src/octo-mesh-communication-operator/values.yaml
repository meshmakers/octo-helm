# Default values for octoMeshCommunicationOperator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

octo-mesh-crds:
  enabled: true
  
configMap:
  kestrelHttpUrl: http://0.0.0.0:5000
  kestrelHttpsUrl: https://0.0.0.0:5001
  certKeyPath: /certs/svc-key.pem
  certPath: /certs/svc.pem

replicaCount: 1

serviceHooks:
  # certificate with private and public key in pfx format, by command arg 
  caKey: ""
  caCrt: ""
  svcKey: ""
  svcCrt: ""

pod:
  httpPort: 5000
  httpsPort: 5001

image:
  repository: meshmakers/octo-communication-operator
  pullPolicy: IfNotPresent
  # private registry to pull images from
  privateRegistry: ""
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""  
  
secrets:
  # content of the root ca certificate chain
  rootCa: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 64Mi

livenessProbe:
  httpGet:
    path: /health/live
    port: http
  initialDelaySeconds: 30
  timeoutSeconds: 1
readinessProbe:
  httpGet:
    path: /health/ready
    port: http
  initialDelaySeconds: 15
  timeoutSeconds: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
